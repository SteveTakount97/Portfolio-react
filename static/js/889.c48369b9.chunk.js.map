{"version":3,"file":"static/js/889.c48369b9.chunk.js","mappings":"0JAAO,MAAMA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiBA,CAACC,EAAQC,EAAWC,KAC9C,IAAKF,EACD,KAAM,iFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,CAAI,ECVR,MAAMC,EACTC,WAAAA,CAAYC,GACRC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,YAC7B,ECFG,MAAMC,EAAW,SAACC,EAAKC,GAAuB,IAAjBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,OAAO,IAAIG,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQC,IAAgB,IAAf,OAAEC,GAAQD,EACpC,MAAME,EAAiB,IAAItB,EAAsBqB,GACnB,MAA1BC,EAAelB,QAA0C,OAAxBkB,EAAejB,KAChDU,EAAQO,GAGRN,EAAOM,EACX,IAEJL,EAAIE,iBAAiB,SAASI,IAAgB,IAAf,OAAEF,GAAQE,EACrCP,EAAO,IAAIhB,EAAsBqB,GAAQ,IAE7CJ,EAAIO,KAAK,OAAQ9B,EAAMC,QAAUa,GAAK,GACtCiB,OAAOC,KAAKhB,GAASiB,SAASC,IAC1BX,EAAIY,iBAAiBD,EAAKlB,EAAQkB,GAAK,IAE3CX,EAAIa,KAAKrB,EAAK,GAEtB,ECnBA,ECoBwBsB,CAACjC,EAAWC,EAAYiC,EAAMnC,KAClD,MAAMoC,EAAMpC,GAAUH,EAAMwC,QACtBC,EAvBYH,KAClB,IAAIG,EAOJ,GALIA,EADgB,kBAATH,EACOI,SAASC,cAAcL,GAGvBA,GAEbG,GAAwC,SAAzBA,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,CAAW,EAYEI,CAAaP,GACjCpC,EAAeqC,EAAKnC,EAAWC,GAC/B,MAAMyC,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,SAC/BF,EAASE,OAAO,aAAc5C,GAC9B0C,EAASE,OAAO,cAAe3C,GAC/ByC,EAASE,OAAO,UAAWT,GACpB1B,EAAS,4BAA6BiC,EAAS,E,aC7B1D,MAuFA,EAvFgBG,KAEd,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAE9CN,EAAUO,IAAeD,EAAAA,EAAAA,UAAS,CACvCE,KAAM,GACNC,MAAO,GACPC,QAAS,KAGLC,EAAgBC,IACpBL,EAAY,IACPP,EACH,CAACY,EAAE/B,OAAO2B,MAAOI,EAAE/B,OAAOgC,OAC1B,EA4BJ,OACEC,EAAAA,EAAAA,MAAA,WAASC,GAAG,UAASC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJF,EAAAA,EAAAA,MAAA,QAAMI,SA5BYN,IACpBA,EAAEO,iBACFC,EAAiB,kBAAmB,mBAAoBR,EAAE/B,OAAQ,qBACjEwC,MAAMC,IACLC,QAAQC,IAAIF,EAAOzD,MACnBwC,EAAmB,uCAGlBoB,YAAW,KACVpB,EAAkB,GAAG,GAClB,KAGHE,EAAY,CACVC,KAAM,GACNC,MAAO,GACPC,QAAS,IACT,IAEFgB,IACFH,QAAQC,IAAIE,EAAM7D,MAClB8D,MAAM,qCAAsC,GAC5C,EAM6BX,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKc,UAAU,gBAAeZ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,SACPC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLrB,KAAK,OACLsB,YAAY,YACZjB,MAAOb,EAASQ,KAChBuB,SAAUpB,EACVqB,UAAQ,QAGVlB,EAAAA,EAAAA,MAAA,OAAKc,UAAU,gBAAeZ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPC,EAAAA,EAAAA,KAAA,SACEY,KAAK,QACLrB,KAAK,QACLsB,YAAY,cACZjB,MAAOb,EAASS,MAChBsB,SAAUpB,EACVqB,UAAQ,QAGVlB,EAAAA,EAAAA,MAAA,OAAKc,UAAU,gBAAeZ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAAA,YACET,KAAK,UACLsB,YAAY,gBACZjB,MAAOb,EAASU,QAChBqB,SAAUpB,EACVqB,UAAQ,QAGVf,EAAAA,EAAAA,KAAA,OAAKW,UAAU,iBAAgBZ,UAC/BC,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAASD,UAAU,MAAKZ,SAAC,iBAGvCZ,IAAkBa,EAAAA,EAAAA,KAAA,KAAGW,UAAU,gBAAeZ,SAAEZ,MACzC,C","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","component/Contact/contact.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","// src/components/Contact.js\r\nimport React, { useState } from 'react';\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst Contact = () => {\r\n    \r\n  const [successMessage, setSuccessMessage] = useState(''); // État pour gérer le message de succès\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    emailjs.sendForm('service_vs6ga7p', 'template_1nj42fa', e.target, 'uYeAA5Lm4q1OEwzKn')\r\n    .then((result) => {\r\n      console.log(result.text);\r\n      setSuccessMessage ('Formulaire de contact bien transmis');\r\n\r\n       // Efface le message après un délai, par exemple 3 secondes\r\n       setTimeout(() => {\r\n        setSuccessMessage('');\r\n        }, 3000);\r\n\r\n\r\n        setFormData({\r\n          name: '',\r\n          email: '',\r\n          message: '',\r\n        });\r\n        \r\n    }, (error) => {\r\n      console.log(error.text);\r\n      alert('Erreur lors de l\\'envoi du message.');\r\n    });\r\n};\r\n\r\n  return (\r\n    <section id=\"contact\">\r\n      <h2>Contactez-moi</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='input-wrapper'>\r\n        <label>Nom</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Votre nom\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        </div>\r\n        <div className='input-wrapper'>\r\n        <label> Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Votre email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        </div>\r\n        <div className='input-wrapper'>\r\n        <label>Message</label>\r\n        <textarea\r\n          name=\"message\"\r\n          placeholder=\"Votre message\"\r\n          value={formData.message}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        </div>\r\n        <div className='input-remember'>\r\n        <button type=\"submit\" className='btn'>Envoyer</button>\r\n        </div>\r\n      </form>\r\n      {successMessage && <p className='succesMessage'>{successMessage}</p>}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","sendForm","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","Contact","successMessage","setSuccessMessage","useState","setFormData","name","email","message","handleChange","e","value","_jsxs","id","children","_jsx","onSubmit","preventDefault","emailjs","then","result","console","log","setTimeout","error","alert","className","type","placeholder","onChange","required"],"sourceRoot":""}