{"version":3,"file":"static/js/218.e7e5152d.chunk.js","mappings":"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","sources":["component/select/select.js","modalProjet/modalProjet.js","component/Projets/Projets.js","services/data.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CategoryBar = ({ selectedCategory, filterProjectsByCategory }) => {\r\n  return (\r\n    <div className=\"category-bar\">\r\n      <button \r\n        onClick={() => filterProjectsByCategory('Tous')} \r\n        className={selectedCategory === 'Tous' ? 'active' : ''}\r\n      >\r\n        Tous\r\n      </button>\r\n      <button \r\n        onClick={() => filterProjectsByCategory('HTML/CSS')} \r\n        className={selectedCategory === 'HTML/CSS' ? 'active' : ''}\r\n      >\r\n        HTML/CSS\r\n      </button>\r\n      <button \r\n        onClick={() => filterProjectsByCategory('JavaScript')} \r\n        className={selectedCategory === 'JavaScript' ? 'active' : ''}\r\n      >\r\n        JavaScript\r\n      </button>\r\n      <button \r\n        onClick={() => filterProjectsByCategory('React')} \r\n        className={selectedCategory === 'React' ? 'active' : ''}\r\n      >\r\n        React\r\n      </button>\r\n      <button \r\n        onClick={() => filterProjectsByCategory('SEO')} \r\n        className={selectedCategory === 'SEO' ? 'active' : ''}\r\n      >\r\n        SEO\r\n      </button>\r\n      <button \r\n        onClick={() => filterProjectsByCategory('PHP')} \r\n        className={selectedCategory === 'PHP' ? 'active' : ''}\r\n      >\r\n        PHP, Laravel\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryBar;\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\nconst ModalProjet = ({ isOpen, onClose, project }) => {\r\n  // Empêcher le scroll lorsque la modale est ouverte\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden'; // Désactive le scroll\r\n    } else {\r\n      document.body.style.overflow = 'auto'; // Réactive le scroll\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = 'auto'; // Assurez-vous que le scroll est réactivé quand le composant est démonté\r\n    };\r\n  }, [isOpen]);\r\n\r\n  if (!isOpen) return null; // Ne pas afficher la modale si elle n'est pas ouverte\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content animated-modal\">\r\n        <button onClick={onClose} className=\"modal-close-btn\">X</button>\r\n        <h2 className=\"modal-title\">{project.title}</h2>\r\n        <div className=\"modal-image-wrapper\">\r\n          <img src={`${process.env.PUBLIC_URL}${project.image}`} alt={project.title} className=\"modal-image\" />\r\n        </div>\r\n        <p className=\"modal-description\">{project.description}</p>\r\n        <div className=\"modal-details\">\r\n          <div className=\"modal-skills\">\r\n            <h3>Compétences acquises</h3>\r\n            <ul className=\"skills-list\">\r\n              {project.skills.map((skill, index) => (\r\n                <li key={index} className=\"skill-item\">{skill}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"modal-info\">\r\n            <h3>Infos Projet</h3>\r\n            <p>{project.info}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalProjet;\r\n","// src/components/Projects.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchDataProjet } from '../../services/data';\r\nimport CategoryBar from '../select/select';\r\nimport ModalProjet from '../../modalProjet/modalProjet';\r\n\r\nconst Projects = () => {\r\n  const [projet, setProjet] = useState([]);\r\n  const [filteredProjets, setFilteredProjets] = useState([]); // Stocker les projets filtrés\r\n  const [selectedCategory, setSelectedCategory] = useState('Tous'); // Stocker la catégorie sélectionnée\r\n  \r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n  const openModal = (projet) => {\r\n    setSelectedProject(projet);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setSelectedProject(null);\r\n  };\r\n\r\n\r\n  // Function to fetch data\r\n  useEffect(() => {\r\n    const loadProjects = async () => {\r\n      try {\r\n        const data = await fetchDataProjet('/data.json'); // Utilisation de la fonction importée\r\n        setProjet(data); // Stocker les données dans le state\r\n        setFilteredProjets (data);\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des projets', error);\r\n      }\r\n    };\r\n\r\n    loadProjects();\r\n  }, []);\r\n\r\n   // Fonction pour filtrer les projets par catégorie\r\n   const filterProjectsByCategory = (category) => {\r\n    setSelectedCategory(category); \r\n    if (category === 'Tous') {\r\n      setFilteredProjets(projet); \r\n    } else {\r\n      const filtered = projet.filter(projet => projet.category === category);\r\n      setFilteredProjets(filtered); \r\n    }\r\n  };\r\n  \r\n  return (\r\n    <section id=\"projects\">\r\n      <h2>Mes Projets</h2>\r\n      <CategoryBar  \r\n      selectedCategory={selectedCategory} \r\n      filterProjectsByCategory={filterProjectsByCategory} \r\n      />\r\n            <div className=\"projects-grid\">\r\n        {filteredProjets.length > 0 ? (\r\n          filteredProjets.map((project, index) => (\r\n            <div key={index} className=\"project-card\"  onClick={() => openModal(project)}>\r\n              <img src={`${process.env.PUBLIC_URL}${project.image}`} alt={project.title} className='img-projet'/>\r\n              <h3>{project.title}</h3>\r\n              <p>{project.description}</p>\r\n              <div className='navigation'>\r\n              <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">Voir sur GitHub</a>\r\n              <a href={project.demo} target=\"_blank\" rel=\"noopener noreferrer\">Voir une demo du Site</a>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Aucun projet disponible pour cette catégorie.</p>\r\n        )}\r\n      </div>\r\n      {selectedProject && (\r\n        <ModalProjet\r\n          isOpen={isModalOpen}\r\n          onClose={closeModal}\r\n          project={selectedProject}\r\n        />\r\n      )}\r\n\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","// Function to fetch data\r\nexport   const fetchDataProjet = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.PUBLIC_URL}/dataProjet.json`); // Utilisation de fetch pour importer les données\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la récupération des données');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Pas de data:', error); // Utilisation correcte du message d'erreur\r\n    }\r\n  };"],"names":["_ref","selectedCategory","filterProjectsByCategory","_jsxs","className","children","_jsx","onClick","isOpen","onClose","project","useEffect","document","body","style","overflow","title","src","image","alt","description","skills","map","skill","index","info","Projects","projet","setProjet","useState","filteredProjets","setFilteredProjets","setSelectedCategory","isModalOpen","setModalOpen","selectedProject","setSelectedProject","async","data","fetchDataProjet","error","console","loadProjects","id","CategoryBar","category","filtered","filter","length","openModal","href","link","target","rel","demo","ModalProjet","closeModal","response","fetch","ok","Error","json"],"sourceRoot":""}