{"version":3,"file":"static/js/61.15929af8.chunk.js","mappings":"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","sources":["component/Slider/carousel.js","component/Competences/competences.js","services/data.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst Carroussel = ({ project = [], title }) => {\r\n  // State pour suivre l'image actuelle\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n   // Fonction pour passer à l'image suivante, stable grâce à useCallback\r\n   const nextImage = useCallback(() => {\r\n    setCurrentImageIndex((currentImageIndex + 1) % project.length);\r\n  }, [currentImageIndex, project.length]);\r\n\r\n  // UseEffect pour changer automatiquement d'image toutes les 5 secondes\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      nextImage();\r\n    }, 5000); // 5 secondes\r\n\r\n    // Nettoyage du timer pour éviter des fuites mémoire\r\n    return () => clearTimeout(timer);\r\n  }, [nextImage]); // Réexécution quand nextImage change\r\n\r\n  return (\r\n    <div className='cover'>\r\n      <div className=\"carousel-image\" >\r\n        {/* Ici, on affiche l'image actuelle */}\r\n        <img src={`${process.env.PUBLIC_URL}${project[currentImageIndex]}`}  alt={title}  className='image-caroussel'/>\r\n      </div>\r\n      {project.length > 1 && (\r\n        <div className='image-counter'>\r\n          {currentImageIndex + 1}/{project.length}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carroussel;\r\n","// src/components/Skills.js\r\nimport React, {useState,  useEffect} from 'react';\r\nimport { FaHtml5, FaCss3Alt, FaJsSquare, FaReact, FaGitAlt,} from 'react-icons/fa'; // Import des icônes\r\nimport { SiNotion, SiRedux } from 'react-icons/si';\r\nimport Carroussel from '../Slider/carousel';\r\nimport { fetchDataProjet } from '../../services/data';\r\n\r\nconst skills = [\r\n  { name: 'HTML', level: '90%', color: '#e34c26', icon: <FaHtml5 /> },\r\n  { name: 'CSS', level: '85%', color: '#1572B6', icon: <FaCss3Alt /> },\r\n  { name: 'SASS', level: '85%', color: '#1572B6', icon: <FaCss3Alt /> },\r\n  { name: 'JavaScript', level: '50%', color: '#f7df1e', icon: <FaJsSquare /> },\r\n  { name: 'React', level: '50%', color: '#61DBFB', icon: <FaReact /> },\r\n  { name: 'Notion, Lighthouse', level: '90%', color: 'green', icon: <SiNotion /> },\r\n  { name: 'React-redux', level: '50%', color: 'black', icon: <SiRedux /> },\r\n  { name: 'React Developper Tools', level: '70%', color: '#68A063', icon: <FaReact /> },\r\n  { name: 'Git, Github', level: '85%', color: '#F05032', icon: <FaGitAlt /> },\r\n];\r\n\r\nconst Skills = () => {\r\n\r\n  const [project, setProjet] = useState([]);\r\n\r\n  // Function to fetch data\r\n  useEffect(() => {\r\n    const loadProjects = async () => {\r\n      try {\r\n        const data = await fetchDataProjet('/data.json'); // Utilisation de la fonction importée\r\n        setProjet(data); // Stocker les données dans le state\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des projets', error);\r\n      }\r\n    };\r\n\r\n    loadProjects();\r\n  }, []);\r\n\r\n   // Extraire les images de chaque projet\r\n   const projectImages = project.map(project => project.image);\r\n   const projectTitle = project.map(project => project.title);\r\n  return (\r\n    \r\n    <div id=\"skills-wrapper\">\r\n  <h2>Mes Compétences</h2>\r\n  \r\n  <section id=\"skills\">\r\n    <div className=\"skills-image\">\r\n      <Carroussel project={projectImages} title={projectTitle} />\r\n    </div>\r\n\r\n    <div className=\"skills-container\">\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className=\"skill\">\r\n          <div className=\"skill-header\">\r\n            {skill.icon} {/* Ajout de l'icône correspondante */}\r\n            <h3>{skill.name}</h3>\r\n          </div>\r\n          <div className=\"skill-bar\">\r\n            <div\r\n              className=\"skill-level\"\r\n              style={{ width: skill.level, backgroundColor: skill.color }} // Utilisation de la couleur personnalisée\r\n            >\r\n              <span>{skill.level}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </section>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","// Function to fetch data\r\nexport   const fetchDataProjet = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.PUBLIC_URL}/dataProjet.json`); // Utilisation de fetch pour importer les données\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la récupération des données');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Pas de data:', error); // Utilisation correcte du message d'erreur\r\n    }\r\n  };"],"names":["_ref","project","title","currentImageIndex","setCurrentImageIndex","useState","nextImage","useCallback","length","useEffect","timer","setTimeout","clearTimeout","_jsxs","className","children","_jsx","src","alt","skills","name","level","color","icon","FaHtml5","FaCss3Alt","FaJsSquare","FaReact","SiNotion","SiRedux","FaGitAlt","Skills","setProjet","async","data","fetchDataProjet","error","console","loadProjects","projectImages","map","image","projectTitle","id","Carroussel","skill","index","style","width","backgroundColor","response","fetch","ok","Error","json"],"sourceRoot":""}